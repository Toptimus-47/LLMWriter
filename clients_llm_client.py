{"cells":[{"cell_type":"code","source":"# clients/llm_client.py\nfrom abc import ABC, abstractmethod\nimport google.generativeai as genai\nfrom config import config\n\nclass BaseLLMClient(ABC):\n    \"\"\"모든 LLM 클라이언트의 추상 기본 클래스\"\"\"\n    @abstractmethod\n    def generate_content(self, system_prompt: str, user_prompt: str, model_id: str) -> str:\n        pass\n\nclass GeminiClient(BaseLLMClient):\n    \"\"\"Google Gemini API를 사용하는 클라이언트\"\"\"\n    def __init__(self):\n        if not config.GOOGLE_API_KEY:\n            raise ValueError(\"Google API 키가 .env 파일에 설정되지 않았습니다.\")\n        genai.configure(api_key=config.GOOGLE_API_KEY)\n\n    def generate_content(self, system_prompt: str, user_prompt: str, model_id: str) -> str:\n        \"\"\"\n        시스템 프롬프트와 사용자 프롬프트를 받아 콘텐츠를 생성합니다.\n        \"\"\"\n        try:\n            model = genai.GenerativeModel(\n                model_name=model_id,\n                system_instruction=system_prompt\n            )\n            response = model.generate_content(user_prompt)\n            return response.text\n        except Exception as e:\n            # API 호출 관련 예외 처리\n            print(f\"Gemini API 호출 중 오류 발생: {e}\")\n            # 특정 오류 유형에 따라 더 구체적인 처리를 할 수 있습니다.\n            # 예를 들어, 안전 설정에 의해 차단된 경우, 다른 메시지를 반환할 수 있습니다.\n            if \"response.prompt_feedback\" in str(e):\n                 return \"생성 요청이 안전 설정에 의해 차단되었습니다. 다른 내용으로 시도해주세요.\"\n            return f\"오류가 발생하여 내용을 생성할 수 없습니다: {e}\"","outputs":[],"execution_count":null,"metadata":{}}],"metadata":{"colab":{"from_bard":true},"kernelspec":{"display_name":"Python 3","name":"python3"}},"nbformat":4,"nbformat_minor":0}